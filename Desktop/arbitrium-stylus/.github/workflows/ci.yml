name: Stylus CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: Add WASM target
        run: rustup target add wasm32-wasi
        
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Build core and harness
        run: |
          cargo build --release -p stylus-core
          cargo build --release -p stylus-harness
          
      - name: Run tests
        run: cargo test --release -p stylus-harness -- --nocapture
        
      - name: Build CLI
        run: cargo build --release -p stylus-cli
        
      - name: Build example contract
        run: |
          cd examples/simple-counter
          cargo build --release --target wasm32-wasi
          
      - name: Test CLI with example
        run: |
          ./target/release/stylus test --wasm-path examples/simple-counter/target/wasm32-wasi/release --json > test-results.json
          cat test-results.json
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.json
          
      - name: Upload CLI binary
        uses: actions/upload-artifact@v4
        with:
          name: stylus-cli
          path: target/release/stylus*